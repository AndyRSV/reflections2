{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
What happens when you initialize a repository? Why do you need to do it?\
- The .git repository gets created. In order to start saving commits\
\
How is the staging area different from the working directory and the repository?\
What value do you think it offers?\
- The staging area allows you to add the file that you want to commit \
and to make \'93snapshot\'94 of these files. \
\
How can you use the staging area to make sure you have one commit per logical\
change?\
- Add all files concerned by the \'93logical change\'94 in the staging area and then commit. So unwanted file will not be included by this commit and will stay the same in the Repo if not commited\
\
What are some situations when branches would be helpful in keeping your history\
organized? How would branches help?\
- If you want to experiment and Have a full working file at the same time. When working on a new feature or fixing bug, so the master can be the production branch (cannot break)\
\
How do the diagrams help you visualize the branch structure?\
\
What is the result of merging two branches together? Why do we represent it in\
the diagram the way we do?\
\
What are the pros and cons of Git\'92s automatic merging vs. always doing merges\
manually?\
 -When using Git in order to merge to branches we need to be careful to understand that merging them will create another commit that will be the parent of both branches\
}